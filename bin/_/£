#! /usr/bin/env zsh

# main command
source $MY/core/utils/helper.zsh

if [[ $# -eq 0 ]]; then
  $0 --help
else

  case "$1" in
  # Direct commands
  install)
    $MY/core/commands/install.zsh
    ;;
  update)
    $MY/core/commands/update.zsh
    ;;
  uninstall)
    $MY/core/commands/uninstall.zsh
    ;;
  brew-clean)
    $MY/core/commands/brew-clean.zsh
    ;;
  npm-clean)
    $MY/core/commands/npm-clean.zsh
    ;;
  doctor)
    $MY/core/commands/doctor.zsh
    ;;

  # Folder-based commands
  app)
    if [[ -z "$2" ]]; then
      echo "Error: 'app' requires a module name. Available apps:"
      echo "  firefox, keepassxc, pcloud, sublime-merge"
      exit 1
    fi

    if [[ -f "$MY/core/apps/$2.zsh" ]]; then
      $MY/core/apps/$2.zsh
    else
      echo "Error: App '$2' not found in core/apps/"
      exit 1
    fi
    ;;

  cli)
    if [[ -z "$2" ]]; then
      echo "Error: 'cli' requires a module name. Available CLI tools:"
      echo "  abbr, aicommits, neovim, ssh"
      exit 1
    fi

    if [[ -f "$MY/core/cli/$2.zsh" ]]; then
      $MY/core/cli/$2.zsh
    else
      echo "Error: CLI tool '$2' not found in core/cli/"
      exit 1
    fi
    ;;

  package)
    if [[ -z "$2" ]]; then
      echo "Error: 'package' requires a module name. Available packages:"
      echo "  antidote, brew, gem, mas, npm, pip"
      exit 1
    fi

    if [[ -f "$MY/core/packages/$2.zsh" ]]; then
      $MY/core/packages/$2.zsh
    else
      echo "Error: Package '$2' not found in core/packages/"
      exit 1
    fi
    ;;

  # Root core files
  run)
    if [[ -z "$2" ]]; then
      echo "Error: 'run' requires a module name. Available core modules:"
      echo "  default-folders, doc, dotfiles, edit, open, os, shims, submodules, symlink"
      exit 1
    fi

    case "$2" in
    os)
      $MY/core/os/main.zsh
      ;;
    doc)
      case "$3" in
      --offline)
        mdlive --dir $MY/doc
        ;;
      *)
        open https://github.com/kud/my/tree/master/doc
        ;;
      esac
      ;;
    edit)
      code $MY
      ;;
    open)
      open $MY
      ;;
    *)
      if [[ -f "$MY/core/system/$2.zsh" ]]; then
        $MY/core/system/$2.zsh
      else
        echo "Error: Core module '$2' not found in core/system/"
        exit 1
      fi
      ;;
    esac
    ;;

  --help)
    source $MY/core/utils/helper.zsh

    echo_space
    printf "Usage:"
    echo_spacex2
    printf "Direct Commands:"
    echo_space
    printf "    install           Start the installation process"
    echo_space
    printf "    update            Update the project"
    echo_space
    printf "    uninstall         Uninstall the project"
    echo_space
    printf "    brew-clean        Clean Homebrew casks"
    echo_space
    printf "    npm-clean         Clean global Node packages"
    echo_space
    printf "    doctor            Run system health checks"
    echo_spacex2
    printf "Categorized Commands:"
    echo_space
    printf "    app <name>        Run app configuration:"
    echo_space
    printf "      firefox, keepassxc, pcloud, sublime-merge"
    echo_spacex2
    printf "    cli <name>        Run CLI tool:"
    echo_space
    printf "      abbr, aicommits, neovim, ssh"
    echo_spacex2
    printf "    package <name>    Run package manager:"
    echo_space
    printf "      antidote, brew, gem, mas, npm, pip"
    echo_spacex2
    printf "    run <name>        Run core module:"
    echo_space
    printf "      default-folders, doc, dotfiles, edit, open, os, shims, submodules, symlink"
    echo_space
    ;;
  *)
    echo "Error: Unrecognized command '$1'. Use --help for a list of commands."
    exit 1
    ;;
  esac

fi
