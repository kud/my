#! /usr/bin/env zsh

# main command
source $MY/core/helper

if [[ $# -eq 0 ]]; then
  $0 --help
else

  case "$1" in
  install)
    $MY/core/install
    ;;
  update)
    $MY/core/update
    ;;
  brew-clean)
    $MY/core/brew-clean
    ;;
  npm-clean)
    $MY/core/npm-clean
    ;;
  doctor)
    $MY/core/doctor
    ;;
  run)
    if [[ -z "$2" ]]; then
      echo "Error: 'run' requires a module name. Available modules:"
      echo "  ssh, dotfiles, symlink, os, firefox, keepassxc,"
      echo "  sublime-merge, aicommits, brew, npm, mas, gem, pip, neovim,"
      echo "  prezto, antidote, pcloud, shims, main"
      exit 1
    fi

    case "$2" in
    ssh|dotfiles|symlink|os|firefox|keepassxc|sublime-merge|aicommits|brew|npm|mas|gem|pip|neovim|prezto|antidote|pcloud|shims|main)
      if [[ -f "$MY/core/$2" ]]; then
        $MY/core/$2
      else
        echo "Error: Module '$2' not found in core/"
        exit 1
      fi
      ;;
    *)
      echo "Error: Unknown module '$2'. Use 'Â£ run' without arguments to see available modules."
      exit 1
      ;;
    esac
    ;;
  doc)
    case "$2" in
    --offline)
      mdlive --dir $MY/doc
      ;;
    *)
      open https://github.com/kud/my/tree/master/doc
      ;;
    esac
    ;;
  edit)
    code $MY
    ;;
  open)
    open $MY
    ;;
  --help)
    source $MY/core/intro

    echo_space
    printf "Usage:"
    echo_spacex2
    printf "    install           Start the installation process"
    echo_space
    printf "    update            Update the project"
    echo_space
    printf "    brew-clean        Clean the casks"
    echo_space
    printf "    npm-clean         Clean global Node packages"
    echo_space
    printf "    doctor            Run system health checks"
    echo_spacex2
    printf "    run <module>      Run a specific core module:"
    echo_space
    printf "      ssh             Configure SSH keys for GitHub"
    echo_space
    printf "      dotfiles        Update dotfiles"
    echo_space
    printf "      symlink         Update symlinks"
    echo_space
    printf "      os              Update OS settings"
    echo_space
    printf "      firefox         Update Firefox settings"
    echo_space
    printf "      keepassxc       Configure KeePassXC settings"
    echo_space
    printf "      sublime-merge   Configure Sublime Merge settings"
    echo_space
    printf "      aicommits       Configure AI-powered commit messages"
    echo_space
    printf "      brew            Install/update Homebrew packages (includes fonts)"
    echo_space
    printf "      npm             Install/update npm packages"
    echo_space
    printf "      mas             Install/update Mac App Store apps"
    echo_space
    printf "      gem             Install/update Ruby gems"
    echo_space
    printf "      pip             Install/update Python packages"
    echo_space
    printf "      neovim          Configure Neovim settings"
    echo_space
    printf "      prezto          Configure Prezto (zsh framework)"
    echo_space
    printf "      antidote        Install/update Antidote zsh plugins"
    echo_space
    printf "      pcloud          Configure pCloud settings"
    echo_space
    printf "      shims           Create shell commands for .app files"
    echo_space
    printf "      main            Run main setup sequence"
    echo_spacex2
    printf "    doc               Access project documentation"
    echo_space
    printf "    edit              Open project in \$EDITOR"
    echo_space
    printf "    open              Open project directory in Finder"
    echo_space
    ;;
  *)
    echo "Error: Unrecognized command '$1'. Use --help for a list of commands."
    exit 1
    ;;
  esac

fi
