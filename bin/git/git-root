#! /usr/bin/env zsh

# git-root - Display the path to the git working tree root
# 
# Usage:
#   git-root                # Display git root path
#   cd $(git-root)          # Navigate to git root
#   git-root --help         # Show help
#
# Examples:
#   git-root                        # → /Users/kud/my
#   cd $(git-root)                  # → changes to git root
#   code $(git-root)                # → open git root in editor
#
# Returns:
#   - Absolute path to git working tree root
#   - Empty output if not in a git repository
#   - Exit code 0 on success, 1 on error

# Help function
show_help() {
  cat << 'EOF'
git-root - Display the path to the git working tree root

USAGE:
  git-root [--help]

DESCRIPTION:
  Shows the absolute path to the root of the current git working tree.
  Useful for navigating to the project root or referencing files relative to it.

EXAMPLES:
  git-root                        # → /Users/user/project
  cd $(git-root)                  # Navigate to git root
  code $(git-root)                # Open git root in VS Code
  ls $(git-root)/docs             # List docs folder from anywhere

EXIT CODES:
  0  Success - root path displayed
  1  Error - not in git repository or other error

SEE ALSO:
  git rev-parse --show-toplevel
  git-dir
EOF
}

# Check for help flag first
if [[ "$1" == "--help" || "$1" == "-h" ]]; then
  show_help
  exit 0
fi

# Get git root using rev-parse --show-toplevel
root=$(git rev-parse --show-toplevel 2>/dev/null)

if [[ $? -eq 0 && -n "$root" ]]; then
  echo "$root"
  exit 0
else
  # Not in a git repository - exit silently with error code
  exit 1
fi
