#!/usr/bin/env zsh

# Wrapper script to run Node.js scripts with Homebrew's Node instead of fnm's Node

# Resolve Node by existence (fast) with Homebrew-first preference
typeset -a __node_candidates
__node_candidates=(
  	"/usr/local/bin/node"              # Intel Homebrew symlink
  	"/opt/homebrew/bin/node"           # Apple Silicon Homebrew symlink
  	"/usr/local/opt/node/bin/node"     # Intel keg path (if not linked)
  	"/opt/homebrew/opt/node/bin/node"  # Apple Silicon keg path (if not linked)
)

BREW_NODE=""
for __p in $__node_candidates; do
    if [[ -x "$__p" ]]; then
        BREW_NODE="$__p"
        break
    fi
done

# Optional: fallback to node in PATH if Homebrew paths are missing
if [[ -z "$BREW_NODE" ]]; then
    if command -v node >/dev/null 2>&1; then
        BREW_NODE="$(command -v node)"
        echo "Warning: Homebrew Node not found; using node from PATH at $BREW_NODE" >&2
    fi
fi

# Ensure we found a usable Node
if [[ -z "$BREW_NODE" || ! -x "$BREW_NODE" ]]; then
    echo "Error: Node.js not found in expected Homebrew locations or PATH." >&2
    echo "Tried: /usr/local/bin/node, /opt/homebrew/bin/node, corresponding opt paths." >&2
    echo "Hint: install via Homebrew: brew install node" >&2
    exit 1
fi

# Get the script name from the first argument
SCRIPT_NAME="$1"
shift  # Remove the first argument so we can pass the rest to the script

# Check if a script name was provided
if [[ -z "$SCRIPT_NAME" ]]; then
    echo "Usage: node-system <script-name> [arguments...]" >&2
    echo "Example: node-system git-branch-select" >&2
    exit 1
fi

# Determine the script path
# First, check if it's a full path
if [[ -f "$SCRIPT_NAME" ]]; then
    SCRIPT_PATH="$SCRIPT_NAME"
# Check in npm global bin directory
elif [[ -f "$HOME/.npm-global/bin/$SCRIPT_NAME" ]]; then
    SCRIPT_PATH="$HOME/.npm-global/bin/$SCRIPT_NAME"
# Check in bin directories
elif [[ -f "$HOME/my/bin/git/$SCRIPT_NAME" ]]; then
    SCRIPT_PATH="$HOME/my/bin/git/$SCRIPT_NAME"
elif [[ -f "$HOME/my/bin/main/$SCRIPT_NAME" ]]; then
    SCRIPT_PATH="$HOME/my/bin/main/$SCRIPT_NAME"
elif [[ -f "$HOME/my/bin/$SCRIPT_NAME" ]]; then
    SCRIPT_PATH="$HOME/my/bin/$SCRIPT_NAME"
# Check with .js extension
elif [[ -f "$HOME/.npm-global/bin/${SCRIPT_NAME}.js" ]]; then
    SCRIPT_PATH="$HOME/.npm-global/bin/${SCRIPT_NAME}.js"
elif [[ -f "$HOME/my/bin/git/${SCRIPT_NAME}.js" ]]; then
    SCRIPT_PATH="$HOME/my/bin/git/${SCRIPT_NAME}.js"
elif [[ -f "$HOME/my/bin/main/${SCRIPT_NAME}.js" ]]; then
    SCRIPT_PATH="$HOME/my/bin/main/${SCRIPT_NAME}.js"
elif [[ -f "$HOME/my/bin/${SCRIPT_NAME}.js" ]]; then
    SCRIPT_PATH="$HOME/my/bin/${SCRIPT_NAME}.js"
else
    echo "Error: Script '$SCRIPT_NAME' not found" >&2
    echo "Searched in:" >&2
    echo "  - Current directory" >&2
    echo "  - ~/.npm-global/bin/" >&2
    echo "  - ~/my/bin/git/" >&2
    echo "  - ~/my/bin/main/" >&2
    echo "  - ~/my/bin/" >&2
    exit 1
fi

# Run the script with Homebrew's Node
exec "$BREW_NODE" "$SCRIPT_PATH" "$@"
