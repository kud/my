[core]
  whitespace   = fix,-indent-with-non-tab,trailing-space,cr-at-eol
  # editor       = subl -n -w
  editor       = vim
	excludesfile = ~/.gitignore_global
[branch]
  autosetuprebase = always
[push]
  # default = tracking
  default = simple
[filter "hawser"]
  clean = git hawser clean %f
  smudge = git hawser smudge %f
  required = true
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
[fetch]
  prune = true
[rebase]
  autosquash = true
[commit]
  verbose = true
[merge]
  ff = false
# [url "git@github.com:"]
#   insteadOf = http://github.com/
#   insteadOf = https://github.com/
[color]
  ui = true
[color "branch"]
  current = yellow reverse
  local   = yellow
  remote  = green
[color "diff"]
  meta       = yellow bold
  frag       = magenta bold
  old        = red bold
  new        = green bold
  whitespace = red reverse
[color "status"]
  added     = yellow
  changed   = green
  untracked = cyan
[alias]
  aa                    = add -A
  add-extended          = "!git ls-files -m -o --exclude-standard|fzf --print0 -m --preview-window right:75%  --preview 'git diff --color=always {}'|xargs -0 -t -o git add"
  aac                   = "!git add -A && git commit"
  apc                   = "!git add -p && git commit"
  co                    = checkout
  br                    = branch
  ci                    = commit
  st                    = status
  df                    = diff
  dc                    = diff --cached
  # diff-subl             = "!git diff $@|subl"
  diff-extended         = "!git diff --color|diff-so-fancy|less"
  # subl-diff             = "!git diff --name-only|uniq|xargs subl"
  # issues                = "!ghi"
  # gh                    = "!github_cli ${@:-.}"
  # kraken                = "!open -na 'GitKraken' --args -p $(pwd)"
  gu                    = "!gitup open ."
  sm                    = "!'/Applications/Sublime Merge.app/Contents/SharedSupport/bin/smerge' ."
  tig                   = "!tig"
  lazy                  = "!lazygit"
  lg                    = log -p
  lol                   = log --graph --decorate --pretty=oneline --abbrev-commit
  lola                  = log --graph --decorate --pretty=oneline --abbrev-commit --all
  ls                    = ls-files
  ign                   = ls-files -o -i --exclude-standard
  lgb                   = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  unstage               = reset HEAD --
  unstash               = stash pop
  last                  = log -1 HEAD
  recommit              = commit --amend
  reset-soft-last       = reset --soft HEAD~1
  pt                    = "!git push && git push --tags"
  pr                    = "!gh pr create"
  fix                   = "!git add -A && git commit --amend --no-edit"
  rmdf                  = "!git rm $(git ls-files --deleted)"
  # export                = "!git clone --depth 1 $1 && rm -rf \"$(basename $1 .git)/.git\" -"
  branches              = branch -avv
  wip                   = "!git add -A && git commit -m 'ðŸš§ WIP ðŸš§'"
  unwip                 = "!git reset --soft HEAD~1 && git unstage"
  polish                = "!git add -A && git commit -m 'ðŸ’…'"
  hotfix                = "!git add -A && git commit -m 'ðŸš’'"
  open-url              = "!gh browse"
  open-modified         = "!$EDITOR $(git status --porcelain | cut -c4-)"
  cleanup               = "!git remote prune origin && git repack && git gc"
  history               = reflog --relative-date
  tools                 = "!echo 'â€¢ gh\nâ€¢ hub\nâ€¢ lazygit\nâ€¢ tig\nâ€¢ ghi'"
  show-commands         = "!git config --get-regexp alias|sed \"s/alias.\\([a-zA-Z-]*\\) \\(\\.\\)*/$(tput setaf 2)\\1 $(tput setaf 0)\\2/\""
[include]
  path = .gitconfig_local
[pull]
	rebase = true
[init]
	defaultBranch = main
[blame]
	ignoreRevsFile = .git-blame-ignore-revs
	markIgnoredLines = true
	markUnblamableLines = true
